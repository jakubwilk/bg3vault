import type { Metadata } from 'next'
<<<<<<< HEAD:src/app/layout.tsx
import localFont from 'next/font/local'
=======
import { Barlow } from 'next/font/google'
import { notFound } from 'next/navigation'
import { NextIntlClientProvider } from 'next-intl'
import { getMessages } from 'next-intl/server'
import { ColorSchemeScript, MantineProvider } from '@mantine/core'
import { Notifications } from '@mantine/notifications'
import { routing } from 'i18n/routing'
import { ReactQueryProvider, StoreProvider } from 'providers'
>>>>>>> master:client/src/app/[locale]/layout.tsx

import '@mantine/core/styles.css'
import '@mantine/notifications/styles.css'
import '../globals.css'

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
})
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<{
<<<<<<< HEAD:src/app/layout.tsx
  children: React.ReactNode
}>) {
=======
  children: ReactNode

  params: { locale: string }
}>) {
  if (!routing.locales.includes(locale as any)) {
    notFound()
  }

  const messages = await getMessages()

>>>>>>> master:client/src/app/[locale]/layout.tsx
  return (
    <html lang={'en'}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>{children}</body>
    </html>
  )
}
