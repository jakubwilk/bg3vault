{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/i18n/routing.ts"],"sourcesContent":["import { createNavigation } from 'next-intl/navigation'\r\nimport { defineRouting } from 'next-intl/routing'\r\n\r\nexport const routing = defineRouting({\r\n  locales: ['en', 'pl'],\r\n\r\n  defaultLocale: 'en',\r\n})\r\n\r\nexport const { Link, redirect, usePathname, useRouter } = createNavigation(routing)\r\n"],"names":[],"mappings":";;;;;;;AACA;AADA;;;AAGO,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,SAAS;QAAC;QAAM;KAAK;IAErB,eAAe;AACjB;AAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+OAAA,CAAA,mBAAgB,AAAD,EAAE"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/i18n/request.ts"],"sourcesContent":["import { getRequestConfig } from 'next-intl/server'\r\n\r\nimport { routing } from './routing'\r\n\r\nexport default getRequestConfig(async ({ requestLocale }) => {\r\n  let locale = await requestLocale\r\n\r\n  if (!locale || !routing.locales.includes(locale as any)) {\r\n    locale = routing.defaultLocale\r\n  }\r\n\r\n  return {\r\n    locale,\r\n    messages: (await import(`../../messages/${locale}.json`)).default,\r\n  }\r\n})\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;;uCAIe,CAAA,GAAA,2OAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACtD,IAAI,SAAS,MAAM;IAEnB,IAAI,CAAC,UAAU,CAAC,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QACvD,SAAS,sHAAA,CAAA,UAAO,CAAC,aAAa;IAChC;IAEA,OAAO;QACL;QACA,UAAU,CAAC;;;;;;;;;kBAAa,CAAC,eAAe,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IACnE;AACF"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import type { NextRequest } from 'next/server'\r\nimport { NextResponse } from 'next/server'\r\nimport createMiddleware from 'next-intl/middleware'\r\nimport { routing } from 'i18n'\r\n\r\nconst intlMiddlewre = createMiddleware(routing)\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const intlResponse = intlMiddlewre(request)\r\n\r\n  if (intlResponse) {\r\n    return intlResponse\r\n  }\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    '/',\r\n    '/(pl|en)/:path*',\r\n    '/((?!api|_next/static|assets|_next/image|favicon.ico|globals.css).*)',\r\n  ],\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AADA;AACA;AAFA;;;;AAIA,MAAM,gBAAgB,CAAA,GAAA,kJAAA,CAAA,UAAgB,AAAD,EAAE,sHAAA,CAAA,UAAO;AAEvC,SAAS,WAAW,OAAoB;IAC7C,MAAM,eAAe,cAAc;IAEnC,IAAI,cAAc;QAChB,OAAO;IACT;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}